// ===========================================
// Taro Uno UI - SCSS 混合宏定义
// ===========================================

@import './variables';

// 主题相关混合宏
// ===========================================

// 设置主题变量
@mixin theme-variables($theme: 'light') {
  @if $theme == 'dark' {
    --primary-color: #{$primary-color};
    --secondary-color: #{$secondary-color};
    --success-color: #{$success-color};
    --warning-color: #{$warning-color};
    --error-color: #{$error-color};
    --info-color: #{$info-color};
    --text-color: #{$dark-text-color};
    --text-color-secondary: #{$dark-text-color-secondary};
    --text-color-disabled: #{$dark-text-color-disabled};
    --text-color-inverse: #{$dark-text-color-inverse};
    --background-color: #{$dark-background-color};
    --background-color-secondary: #{$dark-background-color-secondary};
    --background-color-tertiary: #{$dark-background-color-tertiary};
    --background-card: #{$dark-background-color-card};
    --background-input: #{$dark-background-color-input};
    --background-mask: #{$dark-background-color-mask};
    --border-color: #{$dark-border-color};
    --border-color-light: #{$dark-border-color-light};
    --border-color-focus: #{$dark-border-color-focus};
    --border-color-error: #{$dark-border-color-error};
    --shadow-color: #{$dark-shadow-color};
    --shadow-color-light: #{$dark-shadow-color-light};
    --brand-color: #{$brand-color};
    --accent-color: #{$accent-color};
    --link-color: #{$primary-color};
    --divider-color: #{$dark-divider-color};
  } @else {
    --primary-color: #{$primary-color};
    --secondary-color: #{$secondary-color};
    --success-color: #{$success-color};
    --warning-color: #{$warning-color};
    --error-color: #{$error-color};
    --info-color: #{$info-color};
    --text-color: #{$text-color};
    --text-color-secondary: #{$text-color-secondary};
    --text-color-disabled: #{$text-color-disabled};
    --text-color-inverse: #{$text-color-inverse};
    --background-color: #{$background-color};
    --background-color-secondary: #{$background-color-secondary};
    --background-color-tertiary: #{$background-color-tertiary};
    --background-card: #{$background-color-card};
    --background-input: #{$background-color-input};
    --background-mask: #{$background-color-mask};
    --border-color: #{$border-color};
    --border-color-light: #{$border-color-light};
    --border-color-focus: #{$border-color-focus};
    --border-color-error: #{$border-color-error};
    --shadow-color: #{$shadow-color};
    --shadow-color-light: #{$shadow-color-light};
    --brand-color: #{$brand-color};
    --accent-color: #{$accent-color};
    --link-color: #{$primary-color};
    --divider-color: #{$divider-color};
  }
}

// 暗色主题支持
@mixin dark-theme {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}

// 亮色主题支持
@mixin light-theme {
  @media (prefers-color-scheme: light) {
    @content;
  }
}

// 响应式设计混合宏
// ===========================================

// 移动端
@mixin mobile {
  @media (max-width: $breakpoint-sm) {
    @content;
  }
}

// 平板端
@mixin tablet {
  @media (min-width: $breakpoint-sm) and (max-width: $breakpoint-lg) {
    @content;
  }
}

// 桌面端
@mixin desktop {
  @media (min-width: $breakpoint-lg) {
    @content;
  }
}

// 大屏幕
@mixin large-desktop {
  @media (min-width: $breakpoint-xl) {
    @content;
  }
}

// 超大屏幕
@mixin extra-large-desktop {
  @media (min-width: $breakpoint-xxl) {
    @content;
  }
}

// 自定义断点
@mixin breakpoint($min: 0, $max: 0) {
  @if $min == 0 and $max == 0 {
    @content;
  } @else if $max == 0 {
    @media (min-width: $min) {
      @content;
    }
  } @else if $min == 0 {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  }
}

// 布局混合宏
// ===========================================

// Flexbox 布局
@mixin flex($direction: row, $justify: null, $align: null, $wrap: null) {
  display: flex;
  flex-direction: $direction;
  
  @if $justify {
    justify-content: $justify;
  }
  
  @if $align {
    align-items: $align;
  }
  
  @if $wrap {
    flex-wrap: $wrap;
  }
}

// Grid 布局
@mixin grid($columns: null, $gap: null, $rows: null) {
  display: grid;
  
  @if $columns {
    grid-template-columns: $columns;
  }
  
  @if $rows {
    grid-template-rows: $rows;
  }
  
  @if $gap {
    gap: $gap;
  }
}

// 定位混合宏
@mixin position($type: relative, $top: null, $left: null, $right: null, $bottom: null) {
  position: $type;
  
  @if $top {
    top: $top;
  }
  
  @if $left {
    left: $left;
  }
  
  @if $right {
    right: $right;
  }
  
  @if $bottom {
    bottom: $bottom;
  }
}

// 绝对定位居中
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 固定定位居中
@mixin fixed-center {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Flexbox 居中
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// 间距混合宏
// ===========================================

// 内边距
@mixin padding($top: null, $right: null, $bottom: null, $left: null) {
  @if $top and $right == null and $bottom == null and $left == null {
    padding: $top;
  } @else if $top and $right and $bottom == null and $left == null {
    padding: $top $right;
  } @else if $top and $right and $bottom and $left == null {
    padding: $top $right $bottom;
  } @else {
    padding: $top $right $bottom $left;
  }
}

// 外边距
@mixin margin($top: null, $right: null, $bottom: null, $left: null) {
  @if $top and $right == null and $bottom == null and $left == null {
    margin: $top;
  } @else if $top and $right and $bottom == null and $left == null {
    margin: $top $right;
  } @else if $top and $right and $bottom and $left == null {
    margin: $top $right $bottom;
  } @else {
    margin: $top $right $bottom $left;
  }
}

// 字体混合宏
// ===========================================

// 字体设置
@mixin font($size: null, $weight: null, $line-height: null, $family: null) {
  @if $size {
    font-size: $size;
  }
  
  @if $weight {
    font-weight: $weight;
  }
  
  @if $line-height {
    line-height: $line-height;
  }
  
  @if $family {
    font-family: $family;
  }
}

// 文本截断
@mixin text-truncate($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

// 文本对齐
@mixin text-align($align: left) {
  text-align: $align;
}

// 文本装饰
@mixin text-decoration($decoration: none) {
  text-decoration: $decoration;
}

// 边框混合宏
// ===========================================

// 边框设置
@mixin border($width: null, $style: null, $color: null, $radius: null) {
  @if $width {
    border-width: $width;
  }
  
  @if $style {
    border-style: $style;
  }
  
  @if $color {
    border-color: $color;
  }
  
  @if $radius {
    border-radius: $radius;
  }
}

// 圆角
@mixin border-radius($radius: $border-radius-base) {
  border-radius: $radius;
}

// 单边边框
@mixin border-side($side: all, $width: $border-width-base, $style: $border-style-base, $color: $border-color) {
  @if $side == all {
    border: $width $style $color;
  } @else if $side == top {
    border-top: $width $style $color;
  } @else if $side == right {
    border-right: $width $style $color;
  } @else if $side == bottom {
    border-bottom: $width $style $color;
  } @else if $side == left {
    border-left: $width $style $color;
  }
}

// 阴影混合宏
// ===========================================

// 盒子阴影
@mixin box-shadow($shadow: $shadow-md) {
  box-shadow: $shadow;
}

// 文本阴影
@mixin text-shadow($shadow: 1px 1px 2px rgba(0, 0, 0, 0.1)) {
  text-shadow: $shadow;
}

// 动画混合宏
// ===========================================

// 过渡动画
@mixin transition($properties: all, $duration: $transition-base, $easing: null) {
  @if $easing {
    transition: $properties $duration $easing;
  } @else {
    transition: $properties $duration;
  }
}

// 变换
@mixin transform($transforms...) {
  transform: $transforms;
}

// 旋转
@mixin rotate($deg) {
  transform: rotate($deg);
}

// 缩放
@mixin scale($scale) {
  transform: scale($scale);
}

// 平移
@mixin translate($x, $y) {
  transform: translate($x, $y);
}

// 倾斜
@mixin skew($x, $y) {
  transform: skew($x, $y);
}

// 关键帧动画
@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

// 动画应用
@mixin animation($name, $duration: $animation-duration-normal, $easing: $animation-easing-ease, $delay: 0, $fill-mode: forwards, $iteration-count: 1) {
  animation: $name $duration $easing $delay $fill-mode $iteration-count;
}

// 渐变混合宏
// ===========================================

// 线性渐变
@mixin linear-gradient($direction: to right, $colors...) {
  background: linear-gradient($direction, $colors);
}

// 径向渐变
@mixin radial-gradient($colors...) {
  background: radial-gradient($colors);
}

// 按钮混合宏
// ===========================================

// 按钮基础样式
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  border-radius: $button-border-radius-base;
  font-size: $button-font-size-base;
  font-weight: $font-weight-medium;
  text-align: center;
  cursor: pointer;
  transition: $transition-base;
  user-select: none;
  white-space: nowrap;
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }
}

// 按钮尺寸
@mixin button-size($size: base) {
  @if $size == sm {
    height: $button-height-sm;
    padding: 0 $button-padding-x-sm;
    font-size: $button-font-size-sm;
    border-radius: $button-border-radius-sm;
  } @else if $size == lg {
    height: $button-height-lg;
    padding: 0 $button-padding-x-lg;
    font-size: $button-font-size-lg;
    border-radius: $button-border-radius-lg;
  } @else {
    height: $button-height-base;
    padding: 0 $button-padding-x-base;
    font-size: $button-font-size-base;
    border-radius: $button-border-radius-base;
  }
}

// 按钮变体
@mixin button-variant($bg-color, $text-color: white, $border-color: null) {
  background-color: $bg-color;
  color: $text-color;
  
  @if $border-color {
    border: 1px solid $border-color;
  }
  
  &:hover {
    background-color: darken($bg-color, 10%);
    @if $border-color {
      border-color: darken($border-color, 10%);
    }
  }
  
  &:active {
    background-color: darken($bg-color, 15%);
    @if $border-color {
      border-color: darken($border-color, 15%);
    }
  }
}

// 输入框混合宏
// ===========================================

// 输入框基础样式
@mixin input-base {
  width: 100%;
  padding: 0 $input-padding-x-base;
  border: 1px solid $border-color;
  border-radius: $input-border-radius-base;
  font-size: $font-size-base;
  line-height: $line-height-base;
  background-color: $background-color-input;
  color: $text-color;
  transition: $transition-base;
  
  &:focus {
    outline: none;
    border-color: $border-color-focus;
    box-shadow: 0 0 0 2px rgba($primary-color, 0.2);
  }
  
  &::placeholder {
    color: $text-color-disabled;
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background-color: $background-color-tertiary;
  }
}

// 输入框尺寸
@mixin input-size($size: base) {
  @if $size == sm {
    height: $input-height-sm;
    padding: 0 $input-padding-x-sm;
    font-size: $font-size-sm;
    border-radius: $input-border-radius-sm;
  } @else if $size == lg {
    height: $input-height-lg;
    padding: 0 $input-padding-x-lg;
    font-size: $font-size-lg;
    border-radius: $input-border-radius-lg;
  } @else {
    height: $input-height-base;
    padding: 0 $input-padding-x-base;
    font-size: $font-size-base;
    border-radius: $input-border-radius-base;
  }
}

// 卡片混合宏
// ===========================================

// 卡片基础样式
@mixin card-base {
  background-color: $background-color-card;
  border-radius: $card-border-radius-base;
  border: 1px solid $border-color;
  overflow: hidden;
  
  @include dark-theme {
    background-color: $dark-background-color-card;
    border-color: $dark-border-color;
  }
}

// 卡片尺寸
@mixin card-size($size: base) {
  @if $size == sm {
    padding: $card-padding-sm;
    border-radius: $card-border-radius-sm;
  } @else if $size == lg {
    padding: $card-padding-lg;
    border-radius: $card-border-radius-lg;
  } @else {
    padding: $card-padding-base;
    border-radius: $card-border-radius-base;
  }
}

// 卡片阴影
@mixin card-shadow($shadow: $shadow-md) {
  box-shadow: $shadow;
}

// 工具类混合宏
// ===========================================

// 清除浮动
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// 禁用文本选择
@mixin no-select {
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

// 隐藏元素
@mixin hidden {
  display: none !important;
  visibility: hidden !important;
}

// 可见性
@mixin invisible {
  visibility: hidden !important;
}

// 透明度
@mixin opacity($opacity) {
  opacity: $opacity;
}

// 溢出处理
@mixin overflow($overflow: hidden) {
  overflow: $overflow;
}

// 安全区域适配
// ===========================================

// 顶部安全区域
@mixin safe-area-top {
  padding-top: $safe-area-inset-top;
}

// 底部安全区域
@mixin safe-area-bottom {
  padding-bottom: $safe-area-inset-bottom;
}

// 左侧安全区域
@mixin safe-area-left {
  padding-left: $safe-area-inset-left;
}

// 右侧安全区域
@mixin safe-area-right {
  padding-right: $safe-area-inset-right;
}

// 全部安全区域
@mixin safe-area {
  padding: $safe-area-inset-top $safe-area-inset-right $safe-area-inset-bottom $safe-area-inset-left;
}

// 平台特定混合宏
// ===========================================

// 微信小程序
@mixin weapp {
  @if $platform-weapp {
    @content;
  }
}

// 支付宝小程序
@mixin alipay {
  @if $platform-alipay {
    @content;
  }
}

// H5
@mixin h5 {
  @if $platform-h5 {
    @content;
  }
}

// React Native
@mixin rn {
  @if $platform-rn {
    @content;
  }
}

// 通用混合宏
// ===========================================

// 状态样式
@mixin state-variant($state, $bg-color, $text-color: white) {
  &--#{$state} {
    background-color: $bg-color;
    color: $text-color;
    
    &:hover {
      background-color: darken($bg-color, 10%);
    }
    
    &:active {
      background-color: darken($bg-color, 15%);
    }
  }
}

// 尺寸变体
@mixin size-variant($size, $width, $height, $font-size: null) {
  &--#{$size} {
    width: $width;
    height: $height;
    
    @if $font-size {
      font-size: $font-size;
    }
  }
}

// 圆形元素
@mixin circle($size) {
  width: $size;
  height: $size;
  border-radius: 50%;
}

// 正方形元素
@mixin square($size) {
  width: $size;
  height: $size;
}

// 水平垂直居中
@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 水平居中
@mixin center-x {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

// 垂直居中
@mixin center-y {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

// 三角形
@mixin triangle($size, $color, $direction: up) {
  width: 0;
  height: 0;
  border: $size solid transparent;
  
  @if $direction == up {
    border-bottom-color: $color;
  } @else if $direction == down {
    border-top-color: $color;
  } @else if $direction == left {
    border-right-color: $color;
  } @else if $direction == right {
    border-left-color: $color;
  }
}